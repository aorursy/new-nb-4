import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
warnings.simplefilter(action='ignore', category=FutureWarning)
pd.set_option('display.max_columns', 100)
pd.set_option('display.max_rows', 100)
pay_df = pd.read_csv('../input/installments_payments.csv')
previous = pd.read_csv('../input/previous_application.csv')
previous.head()
def categorical_feature_bar_chart(feature_name, pallete = 'Blues_d'):
    count = previous[feature_name].value_counts(dropna = False).to_frame().reset_index()
    count.rename({'index': feature_name.lower(), feature_name: 'COUNT'}, axis=1, inplace= True)
    plt.figure(figsize=(10,5))
    plt.title("Number of applications by {}".format(feature_name))
    ax = sns.barplot(x = feature_name.lower(), y = 'COUNT', data= count, palette= pallete)

print("Number of rows: {}".format(len(previous)))
print("Number of unique previous applications (SK_ID_PREV): {}".format(previous['SK_ID_PREV'].nunique()))
print("Number of unique current applications (SK_ID_CURR): {}".format(previous['SK_ID_CURR'].nunique()))
categorical_feature_bar_chart('NAME_CONTRACT_TYPE', pallete = 'Blues_d')
categorical_feature_bar_chart('NAME_CONTRACT_STATUS', pallete = 'Greens_d')
plt.figure(figsize=(12,5))
plt.title("Distribution of AMT_ANNUITY")
ax = sns.distplot(previous["AMT_ANNUITY"].dropna())
plt.figure(figsize=(12,5))
plt.title("Distribution of AMT_ANNUITY - LIMITED TO 60k")
ax = sns.distplot(previous[previous["AMT_ANNUITY"] < 60000]["AMT_ANNUITY"].dropna())
plt.figure(figsize=(12,5))
plt.title("Distribution of AMT_APPLICATION")
ax = sns.distplot(previous["AMT_APPLICATION"], color= 'g')
plt.figure(figsize=(12,5))
plt.title("Distribution of AMT_APPLICATION - LIMITED TO 1M")
ax = sns.distplot(previous[previous['AMT_APPLICATION'] <= 1000000]["AMT_APPLICATION"], color= 'g')
plt.figure(figsize=(12,5))
plt.title("Distribution of AMT_CREDIT")
ax = sns.distplot(previous["AMT_CREDIT"].dropna(), color= 'r')
plt.figure(figsize=(12,5))
plt.title("Distribution of AMT_CREDIT - LIMITED TO 1M")
ax = sns.distplot(previous[previous['AMT_CREDIT'] <= 1000000]["AMT_CREDIT"], color= 'r')
revolving = previous[previous['NAME_CONTRACT_TYPE'] == 'Revolving loans']
cons = previous[previous['NAME_CONTRACT_TYPE'] == 'Consumer loans']
cash = previous[previous['NAME_CONTRACT_TYPE'] == 'Cash loans']
print("AMT_DOWN_PAYMENT missing values for Revolving loans: {:.2f}%".format(100*len(revolving[revolving['AMT_DOWN_PAYMENT'].isnull()])/len(revolving)))
print("AMT_DOWN_PAYMENT zero values for Revolving loans: {:.2f}%".format(100*len(revolving[revolving['AMT_DOWN_PAYMENT'] == 0])/len(revolving)))
print("AMT_DOWN_PAYMENT missing values for Cash loans: {:.2f}%".format(100*len(cash[cash['AMT_DOWN_PAYMENT'].isnull()])/len(cash)))
print("AMT_DOWN_PAYMENT zero values for Cash loans: {:.2f}%".format(100*len(cash[cash['AMT_DOWN_PAYMENT'] == 0])/len(cash)))
plt.figure(figsize=(12,5))
plt.title("Distribution of AMT_GOODS_PRICE")
ax = sns.distplot(previous["AMT_GOODS_PRICE"].dropna())
plt.figure(figsize=(12,5))
plt.title("Distribution of AMT_GOODS_PRICE - LIMITED TO 1M")
ax = sns.distplot(previous[previous['AMT_GOODS_PRICE'] <= 1000000]["AMT_GOODS_PRICE"])
categorical_feature_bar_chart('WEEKDAY_APPR_PROCESS_START', 'Blues_d')
categorical_feature_bar_chart('HOUR_APPR_PROCESS_START', 'Greens_d')
plt.figure(figsize=(12,5))
plt.title("Distribution of DAYS_DECISION")
ax = sns.distplot(previous["DAYS_DECISION"].dropna(), color= 'navy')
plt.figure(figsize=(12,5))
plt.title("Distribution of DAYS_TERMINATION")
ax = sns.distplot(previous[previous["DAYS_TERMINATION"] < 365243]["DAYS_TERMINATION"].dropna(), color= 'orange')
plt.figure(figsize=(12,5))
plt.title("Distribution of DAYS_FIRST_DRAWING")
ax = sns.distplot(previous[previous["DAYS_FIRST_DRAWING"] < 365243]["DAYS_FIRST_DRAWING"].dropna(), color= 'green')
plt.figure(figsize=(12,5))
plt.title("Distribution of DAYS_FIRST_DUE")
ax = sns.distplot(previous[previous["DAYS_FIRST_DUE"] < 365243]["DAYS_FIRST_DUE"].dropna(), color= 'red')
plt.figure(figsize=(12,5))
plt.title("Distribution of DAYS_LAST_DUE_1ST_VERSION")
ax = sns.distplot(previous[previous["DAYS_LAST_DUE_1ST_VERSION"] < 365243]["DAYS_LAST_DUE_1ST_VERSION"].dropna())
plt.figure(figsize=(12,5))
plt.title("Distribution of DAYS_LAST_DUE")
ax = sns.distplot(previous[previous["DAYS_LAST_DUE"] < 365243]["DAYS_LAST_DUE"].dropna(), color= 'gray')
plt.figure(figsize=(12,5))
plt.title("Distribution of CNT_PAYMENT")
ax = sns.distplot(previous["CNT_PAYMENT"].dropna(), color= 'green')